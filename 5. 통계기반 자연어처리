[핵심키워드 추출 (TF-IDF)]

중요한 단어를 추출 -> 단어의 중요성을 어떻게 판단할 것인가
필요성 : 대량 데이터 처리 가능, 추출의 일관성, 실시간 분석 가능단

통계적 접근
-단어빈도 : 문서를 단어모음으로 간주, 빈도를 활용
-연어/동시발생 : N-gram 같은 통계기법을 활용, 
               연어(연이어 함께 자주 등장하는 단어 묶음), 
               동시발생(동일 코퍼스 내에 함께 등장하는 단어 묶음, 연어와 달리 단어가 인접할 필요 없음) 
 
1. TF-IDF 활용 핵심 키워드 추출
토큰화 -> TF-IDF계산 -> TF-IDF score가 높은 순으로 추출

[실습] 핵심키워드 추출(TF-IDF)
Mecab 활용
from konlpy.tag import Mecab

gensim 활용
from gensim.models import TfidfModel
from gensim.corpora import Dictionary


2. TextRank 활용 핵심키워드 추출 
그래프 생성->중요도 계산
Google PageRank를 기초로함
관련 논문 - TextRank:Bringing Order into Texts
           그래프 기반 랭킹 모델, 키워크와 문장 추출을 위한 비지도 학습 방법을 제안
           그래프의 각 vertex의 중요도를 결정하는 방법(그래프 기반 랭킹 알고리즘)
           그래프속 vertex(노드)의 중요도를 결정하는 방법 -> 하나의 vertex가 다른 vertex에 연결되면 투표 또는 추천
           많은 득표한 vertex가 중요 vertex
           undirected 그래프
  (논문 내용에 따른 설명 - 어렵다)         
           
[실습] 핵심키워드 추출(TextRank)
1) 행렬활용
-unique한 토큰 목록 생성 -> 그래프 생성(weighted edge 계산) -> 각 노드의 score계산 - > 핵심 단어 추츨

(어렵다..)


3. 문서요약 (Document Summarizer)
문서에서 중요한 문장을 자동으로 추출하는 과정


[실습] 문서요약 (Luhn Summarizer)



